// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client2 {
  provider = "prisma-client-js"
}

model items {
  id          Int       @id @default(autoincrement())   // id (BIGSERIALに相当)
  name        String                                  // 商品名 (textに相当)
  price       String                                  // 値段 (textに相当)
  description String                                  // 説明 (textに相当)
  category_id Int?
  images      String[]                            
  maji_flag   Boolean   @default(false)
  postage     Int?
  inventory   Int?
  deleted_at  DateTime?                                 // 削除日時 (timestamp with time zoneに相当、NULLを許可)
  created_at  DateTime                                  // 作成日時 (timestamp with time zoneに相当)
  updated_at  DateTime                                  // 更新日時 (timestamp with time zoneに相当)
}

model admin_users {
  id          BigInt      @id @default(autoincrement())   // id (BIGSERIALに相当)
  email       String                                    // E-mail (textに相当)
  password    String                                    // パスワード (textに相当)
  deleted_at  DateTime?                                 // 削除日時 (timestamp with time zoneに相当、NULLを許可)
  created_at  DateTime                                  // 作成日時 (timestamp with time zoneに相当)
  updated_at  DateTime                                  // 更新日時 (timestamp with time zoneに相当)
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          BigInt      @id @default(autoincrement())   // id (BIGSERIALに相当)
  name        String                                    // カテゴリー名
  deleted_at  DateTime?                                 // 削除日時 (timestamp with time zoneに相当、NULLを許可)
  created_at  DateTime                                  // 作成日時 (timestamp with time zoneに相当)
  updated_at  DateTime                                  // 更新日時 (timestamp with time zoneに相当)
}